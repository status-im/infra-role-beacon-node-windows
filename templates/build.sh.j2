#!/usr/bin/env bash
# vim: ft=sh
set -e

function headIsDetached() {
    [[ $(git rev-parse --abbrev-ref --symbolic-full-name HEAD) == "HEAD" ]];
}

function binaryExists() {
    ls -l build/nimbus_beacon_node_${COMMIT} 2>&1 1>/dev/null
}

function fetchChanges() {
    # We cannot use "git pull" in here, because history may be changed upstream
    git fetch
    git reset --hard "origin/${BRANCH}"
}

function buildBinaries() {
    # Just one process so it doesn't affect the running beacon nodes.
    make -j1 update V=3
    make -j1 nimbus_beacon_node nimbus_signing_process V=3 \
        LOG_LEVEL="TRACE" NIMFLAGS="-d:testnet_servers_image -d:noSignalHandler"

    # Rename binaries to match commit the were built from.
    mv "build/nimbus_beacon_node" "build/nimbus_beacon_node_${COMMIT}"
    mv "build/nimbus_signing_process" "build/nimbus_signing_process_${COMMIT}"

    # Delete copies that are older than 7 days
    find build -mtime +7 -exec rm '{}' \+
}

#-------------------------------------------------------------------------------

BRANCH="{{ beacon_node_repo_branch }}"
INSTALL_PATH="{{ beacon_node_service_bin_path }}"

# Build the Beacon node binaries
pushd repo >/dev/null

# Detached HEAD means we're probably on a tag
if headIsDetached; then
    echo " >>> Deatached HEAD, nothing to fetch."
else
    echo " >>> Fetching changes..."
    fetchChanges
fi

COMMIT=$(git rev-parse --short=8 HEAD)

if binaryExists && [[ "$1" != "--force" ]]; then
    echo " >>> Binary already built"
else
    echo " >>> Building binaries..."
    buildBinaries
fi

popd >/dev/null

echo " >>> Install binaries..."
cp -v "repo/build/nimbus_beacon_node_${COMMIT}.exe" "${INSTALL_PATH}/nimbus_beacon_node.exe"
cp -v "repo/build/nimbus_signing_process_${COMMIT}.exe" "${INSTALL_PATH}/nimbus_signing_process.exe"

echo " >>> SUCCESS"
